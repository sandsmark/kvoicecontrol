/****************************************************************************
** Score meta object code from reading C++ file 'score.h'
**
** Created: Sat Jan 2 03:18:51 1999
**      by: The Qt Meta Object Compiler ($Revision: 2.25.2.11 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#define Q_MOC_OUTPUT_REVISION 2
#elif Q_MOC_OUTPUT_REVISION != 2
#error "Moc format conflict - please regenerate all moc files"
#endif

#include "score.h"
#include <qmetaobject.h>


const char *Score::className() const
{
    return "Score";
}

QMetaObject *Score::metaObj = 0;


#if QT_VERSION >= 200
static QMetaObjectInit init_Score(&Score::staticMetaObject);

#endif

void Score::initMetaObject()
{
    if ( metaObj )
	return;
    if ( strcmp(QObject::className(), "QObject") != 0 )
	badSuperclassWarning("Score","QObject");

#if QT_VERSION >= 200
    staticMetaObject();
}

void Score::staticMetaObject()
{
    if ( metaObj )
	return;
    QObject::staticMetaObject();
#else

    QObject::initMetaObject();
#endif

    typedef void(Score::*m1_t0)(int);
    typedef void(Score::*m1_t1)(float);
    typedef void(Score::*m1_t2)(float);
    m1_t0 v1_0 = &Score::set_adjust_width;
    m1_t1 v1_1 = &Score::set_threshold;
    m1_t2 v1_2 = &Score::set_min_distance;
    QMetaData *slot_tbl = new QMetaData[3];
    slot_tbl[0].name = "set_adjust_width(int)";
    slot_tbl[1].name = "set_threshold(float)";
    slot_tbl[2].name = "set_min_distance(float)";
    slot_tbl[0].ptr = *((QMember*)&v1_0);
    slot_tbl[1].ptr = *((QMember*)&v1_1);
    slot_tbl[2].ptr = *((QMember*)&v1_2);
    metaObj = new QMetaObject( "Score", "QObject",
	slot_tbl, 3,
	0, 0 );
}
