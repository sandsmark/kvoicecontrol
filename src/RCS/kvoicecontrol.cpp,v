head	1.17;
access;
symbols
	beforeConnectedTry:1.6
	branchAndBound:1.5
	dockingToPanelNow:1.5;
locks; strict;
comment	@// @;


1.17
date	99.01.02.21.45.19;	author kiecza;	state Exp;
branches;
next	1.16;

1.16
date	99.01.02.08.24.45;	author kiecza;	state Exp;
branches;
next	1.15;

1.15
date	99.01.02.07.59.19;	author kiecza;	state Exp;
branches;
next	1.14;

1.14
date	98.12.17.00.22.29;	author kiecza;	state Exp;
branches;
next	1.13;

1.13
date	98.10.26.10.09.58;	author daniel;	state Exp;
branches;
next	1.12;

1.12
date	98.09.25.19.24.27;	author daniel;	state Exp;
branches;
next	1.11;

1.11
date	98.06.14.13.23.24;	author daniel;	state Exp;
branches;
next	1.10;

1.10
date	98.06.02.10.32.51;	author daniel;	state Exp;
branches;
next	1.9;

1.9
date	98.05.05.11.16.30;	author daniel;	state Exp;
branches;
next	1.8;

1.8
date	98.05.01.21.44.21;	author daniel;	state Exp;
branches;
next	1.7;

1.7
date	98.05.01.21.17.00;	author daniel;	state Exp;
branches;
next	1.6;

1.6
date	98.04.29.23.13.29;	author daniel;	state Exp;
branches;
next	1.5;

1.5
date	98.04.29.02.19.38;	author daniel;	state Exp;
branches;
next	1.4;

1.4
date	98.04.28.00.02.25;	author daniel;	state Exp;
branches;
next	1.3;

1.3
date	98.04.27.20.02.12;	author daniel;	state Exp;
branches;
next	1.2;

1.2
date	98.04.27.00.24.50;	author daniel;	state Exp;
branches;
next	1.1;

1.1
date	98.04.26.15.57.00;	author daniel;	state Exp;
branches;
next	;


desc
@@


1.17
log
@use ../config.h instead of version.h to hold central release number
@
text
@/*********************************************************************************
 *
 * $Id: kvoicecontrol.cpp,v 1.16 1999/01/02 08:24:45 kiecza Exp kiecza $
 *
 *********************************************************************************/

#include <qkeycode.h>
#include <qaccel.h>
#include <kiconloader.h>
#include <klocale.h>
#include <qmsgbox.h>
#include <kconfig.h>
#include <qrect.h>
#include <qfile.h>
#include <qdir.h>

#include "../config.h"
#include "docking.h"

#include "kvoicecontrol.moc"

#include <iostream.h>
#include <stdlib.h>
#include <unistd.h>

#define _(TEXT) klocale->translate(TEXT)

KApplication  *globalKapp;
KIconLoader   *globalKIL;
KVoiceControl *kvoicecontrol;
DockWidget    *dock_widget;
QString       lockFile;


bool createLockFile(QFile *file)
{
  if (file->open( IO_WriteOnly ))
  {
    QTextStream t( file );
    t << getpid() << endl;
    file->close();               
    return(true);
  }
  else
  {
    // ***** could not write PID file!

    return(false);
  }
}


int main(int argc, char **argv)
{
  if (argc != 1 && argc != 2)
  {
    cerr << "Usage: " << *argv[0] << " [<speakerfile.spk>]" << endl;
    exit(1);
  }

  // ***** create the lock file direcotry and check whether another instance
  //       of KVoiceControl is already running

  lockFile = globalKapp->localkdedir().data(); 
  lockFile += "/share/apps/kvoicecontrol";
  QDir dir(lockFile.data());
  if ( !dir.exists() )
    if ( ! dir.mkdir(lockFile.data(), TRUE) )
    {
       cerr << "Could not create the directory " << lockFile << endl;
       exit(1);
    }
  lockFile += "/kvoicecontrol.pid";
  QFile *file = new QFile(lockFile);
  if (file->open( IO_ReadOnly ))
  {
    QTextStream t( file );
    __pid_t s;
    t >> s;
    file->close();               

    if (getpgid(s) != -1)
    {
      // ***** tell the user about another instance of KVoiceControl already running
 
      cerr << "Another instance of KVoiceControl is already running!" << endl;
      cerr << "Its process ID is " << s << endl;
      exit(1);
    }
    else
    {
      // ***** update PID file!

      cerr << "Removing stale lock file " << lockFile << endl;
      file->remove();
      
      if (!createLockFile(file))
      {
	cerr << "Failed to create file " << lockFile << "!" << endl;
	exit(1);
      }
    }
  }
  else 
  {
    // ***** create PID file

    if (!createLockFile(file))
    {
      cerr << "Failed to create file " << lockFile << "!" << endl;
      exit(1);
    }
  }
  delete file;

  globalKapp = new KApplication( argc, argv, "kvoicecontrol");
  globalKIL  = globalKapp->getIconLoader();
  dock_widget = new DockWidget("dock_kvoicecontrol");
  dock_widget->dock();

  if (argc == 0)
    kvoicecontrol = new KVoiceControl(0);
  else
    kvoicecontrol = new KVoiceControl(argv[1]);
  return globalKapp->exec();
}


/* *******************************************************************************
**
** Constructor
**
******************************************************************************* */

KVoiceControl::KVoiceControl(char *speakerfile)
{
  speakermodel = new SpeakerModel(globalKapp->getConfig(), this, "spkm");

  globalKapp->setMainWidget(speakermodel);
  create_menu();
    
  connect(speakermodel, SIGNAL(new_title(QString)), this, SLOT(set_title(QString)));
  connect(speakermodel, SIGNAL(detect_mode_changed(bool)), this, SLOT(set_detect(bool)));
  //connect(speakermodel, SIGNAL(detect_mode_changed(bool)), dock_widget, SLOT(set_detect(bool)));

  speakermodel->reset();
  uint minY = main_menu->height();
  speakermodel->setGeometry(5, minY+5, 300, 200);
  
  resize(310,210+2*minY);
  //show();
  setMinimumSize( 310, 210+2*minY );
  setMaximumSize( 310, 210+2*minY );

  if (speakerfile != NULL)
  {
    speakermodel->load(speakerfile, true);
    speakermodel->detect_mode_on();
  }
  else
    show();
}


/* *******************************************************************************
**
** Destructor
**
******************************************************************************* */

KVoiceControl::~KVoiceControl()
{
  delete speakermodel;

  delete file_menu;
  delete opt_menu;
  delete help_menu;
  delete main_menu;
}


/* *******************************************************************************
**
** about
**
******************************************************************************* */

void KVoiceControl::about()
{
  speakermodel->detect_mode_off();

  QString version = "kvoicecontrol ";
  version += VERSION;
  version += "\n\n(c) 1998 Daniel Kiecza <daniel@@kiecza.de>";
  QMessageBox::about(this, "About...", version);
}


/* *******************************************************************************
**
** create_menu
**
******************************************************************************* */

void KVoiceControl::create_menu()
{
  file_menu = new QPopupMenu;
  file_menu->insertItem( _("&New"), speakermodel, SLOT(reset()));
  file_menu->insertSeparator();
  file_menu->insertItem( _("&Load"), speakermodel, SLOT(load()));
  file_menu->insertItem( _("&Save"), speakermodel, SLOT(save()));
  file_menu->insertItem( _("Save &as..."), speakermodel, SLOT(save_as()));
  file_menu->insertSeparator();
  file_menu->insertItem( _("&Import ..."), speakermodel, SLOT(import()));
  file_menu->insertSeparator();
  file_menu->insertItem( _("&Quit"), this, SLOT(quit()), CTRL+Key_Q);
  
  rec_menu = new QPopupMenu;
  detect_ID = rec_menu->insertItem( _("&Recognition Mode"), speakermodel, SLOT(toggle_detect_mode()), CTRL+ALT+Key_R);
  rec_menu->setCheckable( TRUE );
  
  connect(dock_widget, SIGNAL(toggle_detect_mode()), speakermodel, SLOT(toggle_detect_mode()));

  QAccel *b = new QAccel(this);
  b->connectItem(b->insertItem(CTRL+ALT+Key_R), speakermodel, SLOT(toggle_detect_mode()));

  opt_menu = new QPopupMenu;
  opt_menu->insertItem( _("&Options ..."), speakermodel, SLOT(show_options()));
  opt_menu->insertSeparator();
  opt_menu->insertItem( _("&Train From File ..."), speakermodel, SLOT(train_references()));
  opt_menu->insertSeparator();
  opt_menu->insertItem( _("&Calibrate Micro ..."), speakermodel, SLOT(calibrate_micro()));

  help_menu = new QPopupMenu;
  help_menu->insertItem( _("&Help"), this, SLOT(help()),Key_F1);
  help_menu->insertSeparator();
  help_menu->insertItem( _("&About..."), this, SLOT(about()));
  
  main_menu = new KMenuBar(this, "main menu");
  main_menu->insertItem( _("&File"), file_menu);
  main_menu->insertItem( _("&Action"), rec_menu);
  main_menu->insertItem( _("&Options"), opt_menu);
  main_menu->insertSeparator();
  main_menu->insertItem( _("&Help"), help_menu);
  
  setMenu(main_menu);
}

  
/* *******************************************************************************
**
** help
**
******************************************************************************* */

void KVoiceControl::help()
{
  globalKapp->invokeHTMLHelp("", "");
}


/* *******************************************************************************
**
** quit
**
******************************************************************************* */

void KVoiceControl::quit()
{
  speakermodel->detect_mode_off();

  if (speakermodel->has_changed())
  {
    if (speakermodel->ask_save_changes())
    {
      speakermodel->save_config(globalKapp->getConfig());
      QFile::remove(lockFile.data());
      exit(0);
    }
  }
  else 
  {
    speakermodel->save_config(globalKapp->getConfig());
    QFile::remove(lockFile.data());
    exit(0);
  }
}


/* *******************************************************************************
**
** set_detect
**
******************************************************************************* */

void KVoiceControl::set_detect(bool do_detect)
{
  rec_menu->setItemChecked( detect_ID, do_detect );
}


/* *******************************************************************************
**
** set_title
**
******************************************************************************* */

void KVoiceControl::set_title(QString title)
{
  setCaption(title);
}



void KVoiceControl::closeEvent(QCloseEvent *)
{
  dock_widget->toggle_window_state();
  //e->ignore();
}


@


1.16
log
@use QFile::remove instead of system() call to "rm" to remove unwanted lock files
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.15 1999/01/02 07:59:19 kiecza Exp kiecza $
d17 1
a17 1
#include "version.h"
d193 1
a193 1
  version += KVOICECONTROL_VERSION;
@


1.15
log
@lock file mechanism moved from /var/lock to globalKapp->localkdedir()

version in dialog box "about" is now retrieved from central version file "version.h"

RCS log history removed from file header
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.14 1998/12/17 00:22:29 kiecza Exp kiecza $
d32 1
a32 1
QString       lockFile, rmLockFile;
d64 1
a64 1
  lockFile = globalKapp->localkdedir().data();
a73 2
  rmLockFile = "rm -f ";
  rmLockFile += lockFile.data();
d95 1
a95 1
      system(rmLockFile.data());
d194 1
a194 1
  version += "\n\n(c) 1998 Daniel Kiecza <kiecza@@ira.uka.de>";
d277 1
a277 1
      system("rm -f /var/lock/kvoicecontrol.pid");
d284 1
a284 1
    system("rm -f /var/lock/kvoicecontrol.pid");
@


1.14
log
@use a lock-file /var/lock/kvoicecontrol.pid to ensure that only one instance of
KVoiceControl is launched at a time!
@
text
@d3 1
a3 50
 * $Id: kvoicecontrol.cpp,v 1.13 1998/10/26 10:09:58 daniel Exp kiecza $
 *
 * $Log: kvoicecontrol.cpp,v $
 * Revision 1.13  1998/10/26 10:09:58  daniel
 * version++ 0.11 -> 0.12
 *
 * Revision 1.12  1998/09/25 19:24:27  daniel
 * version++ 0.1 -> 0.11
 *
 * Revision 1.11  1998/06/14 13:23:24  daniel
 * version++ 0.09 -> 0.1
 *
 * Revision 1.10  1998/06/02 10:32:51  daniel
 * microphone calibration menu entry added
 *
 * Revision 1.9  1998/05/05 11:16:30  daniel
 * import speakerfile added to speakermodel.[cpp|h]
 *
 * Revision 1.8  1998/05/01 21:44:21  daniel
 * version++ 0.06 -> 0.09
 *
 * Revision 1.7  1998/05/01 21:17:00  daniel
 * constructor accepts speakerfile name now (that was extracted from the command line)
 * if specified, speakerfile is loaded and recognition mode is entered!
 * TrainDialog now accessible via Options menu
 *
 * Revision 1.6  1998/04/29 23:13:29  daniel
 * version++ 0.03 -> 0.06
 *
 * Revision 1.5  1998/04/29 02:19:38  daniel
 * KVoiceControl *kvoicecontrol  ... is global now (needed by DockWidget)
 * DockWidget introduced
 * tiny_mode stuff removed !
 * closeEvent() method needed for interaction with DockWidget
 *
 * Revision 1.4  1998/04/28 00:02:25  daniel
 * led_recognition working correctly now!
 *
 * Revision 1.3  1998/04/27 20:02:12  daniel
 * led_record and led_recognition added
 * led_recognition not yet working correctly!
 * tiny mode added (can be used during recognition mode; just displays the two LEDs)
 *
 * Revision 1.2  1998/04/27 00:24:50  daniel
 * options menu and options editor added
 * KConfig object introduced
 *
 * Revision 1.1  1998/04/26 15:57:00  daniel
 * Initial revision
 *
d15 1
d17 1
d32 1
d61 2
d64 13
a76 3
  // ***** check whether another instance of KVoiceControl is already running

  QFile *file = new QFile("/var/lock/kvoicecontrol.pid");
a79 1
    //QString s = t.readLine();
d96 2
a97 2
      cerr << "Removing stale lock file /var/lock/kvoicecontrol.pid" << endl;
      system("rm -f /var/lock/kvoicecontrol.pid");
d101 1
a101 1
	cerr << "Failed to create file /var/lock/kvoicecontrol.pid!" << endl;
d112 1
a112 1
      cerr << "Failed to create file /var/lock/kvoicecontrol.pid!" << endl;
d194 4
a197 3
  QMessageBox::about(this, "About...",
		     "kvoicecontrol 0.12\n\n"
		     "(c) 1998 Daniel Kiecza <kiecza@@ira.uka.de>");
@


1.13
log
@version++ 0.11 -> 0.12
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.12 1998/09/25 19:24:27 daniel Exp daniel $
d6 3
d63 1
d70 2
d80 19
d107 46
d313 1
d320 1
@


1.12
log
@version++ 0.1 -> 0.11
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.11 1998/06/14 13:23:24 daniel Exp daniel $
d6 3
d159 1
a159 1
		     "kvoicecontrol 0.11\n\n"
@


1.11
log
@version++ 0.09 -> 0.1
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.10 1998/06/02 10:32:51 daniel Exp daniel $
d6 3
d156 1
a156 1
		     "kvoicecontrol 0.1\n\n"
@


1.10
log
@microphone calibration menu entry added
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.9 1998/05/05 11:16:30 daniel Exp daniel $
d6 3
d153 1
a153 1
		     "kvoicecontrol 0.09\n\n"
@


1.9
log
@import speakerfile added to speakermodel.[cpp|h]
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.8 1998/05/01 21:44:21 daniel Exp daniel $
d6 3
d187 2
@


1.8
log
@version++ 0.06 -> 0.09
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.7 1998/05/01 21:17:00 daniel Exp daniel $
d6 3
d111 1
a111 1
    speakermodel->load(speakerfile);
d162 1
d166 2
@


1.7
log
@constructor accepts speakerfile name now (that was extracted from the command line)
if specified, speakerfile is loaded and recognition mode is entered!
TrainDialog now accessible via Options menu
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.6 1998/04/29 23:13:29 daniel Exp daniel $
d6 5
d144 1
a144 1
		     "kvoicecontrol 0.06\n\n"
@


1.6
log
@version++ 0.03 -> 0.06
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.5 1998/04/29 02:19:38 daniel Exp daniel $
d6 3
d56 6
d66 5
a70 2
  
  kvoicecontrol = new KVoiceControl();
d81 1
a81 1
KVoiceControl::KVoiceControl()
d101 7
a107 1
  show();
d171 2
@


1.5
log
@KVoiceControl *kvoicecontrol  ... is global now (needed by DockWidget)
DockWidget introduced
tiny_mode stuff removed !
closeEvent() method needed for interaction with DockWidget
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.4 1998/04/28 00:02:25 daniel Exp daniel $
d6 6
d121 1
a121 1
		     "kvoicecontrol 0.03\n\n"
@


1.4
log
@led_recognition working correctly now!
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.3 1998/04/27 20:02:12 daniel Exp daniel $
d6 3
d32 2
d40 4
a43 2
KApplication *globalKapp;
KIconLoader  *globalKIL;
d49 2
a50 1
  KVoiceControl *kvoicecontrol;
d72 1
a77 1
  
a82 2
  is_tiny = false;
  //toggle_tiny_mode();
a83 1

a137 1
  tiny_ID = rec_menu->insertItem( _("&Tiny Mode"), this, SLOT(toggle_tiny_mode()), CTRL+ALT+Key_S);
d139 2
a141 2
  QAccel *a = new QAccel(this);
  a->connectItem(a->insertItem(CTRL+ALT+Key_S), this, SLOT(toggle_tiny_mode()));
d216 1
a216 1
** toggle_tiny_mode
d220 1
a220 1
void KVoiceControl::toggle_tiny_mode()
d222 1
a222 23
  is_tiny = !is_tiny;
  rec_menu->setItemChecked( tiny_ID, is_tiny );

  if (is_tiny)
  {
    main_menu->hide();
    speakermodel->tiny_mode(true);
    speakermodel->setGeometry(0, 0, 25, 25);
    setMinimumSize( 25, 25);
    setMaximumSize( 25, 25);
    resize(25, 25);
    //show();
  }
  else
  {
    main_menu->show();
    speakermodel->tiny_mode(false);
    uint minY = main_menu->height();
    speakermodel->setGeometry(5, minY+5, 300, 200);
    resize(310,210+2*minY);
    setMinimumSize( 310, 210+2*minY );
    setMaximumSize( 310, 210+2*minY );
  }
a225 5
/* *******************************************************************************
**
** set_title
**
******************************************************************************* */
d227 1
a227 1
void KVoiceControl::set_title(QString title)
d229 2
a230 1
  setCaption(title);
d232 2
@


1.3
log
@led_record and led_recognition added
led_recognition not yet working correctly!
tiny mode added (can be used during recognition mode; just displays the two LEDs)
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.2 1998/04/27 00:24:50 daniel Exp daniel $
d6 5
d57 1
a57 1
  speakermodel = new SpeakerModel(kapp->getConfig(), this, "spkm");
d186 1
a186 1
      speakermodel->save_config(kapp->getConfig());
d192 1
a192 1
    speakermodel->save_config(kapp->getConfig());
@


1.2
log
@options menu and options editor added
KConfig object introduced
@
text
@d3 1
a3 1
 * $Id: kvoicecontrol.cpp,v 1.1 1998/04/26 15:57:00 daniel Exp daniel $
d6 4
d22 1
d26 2
d54 1
a54 1
  globalKapp->setMainWidget(this);
d64 1
d66 1
a66 1
  show();
d69 5
d128 1
d131 5
d202 34
@


1.1
log
@Initial revision
@
text
@d3 5
a7 1
 * $Id: $
a8 1
 * $Log: $
d17 1
d45 1
a45 1
  speakermodel = new SpeakerModel(this, "spkm");
d92 1
a92 1
		     "kvoicecontrol 0.009\n\n"
d106 4
a109 4
  file_menu->insertItem( _("&New Speaker"), speakermodel, SLOT(reset()));
  file_menu->insertItem( _("&Load Speaker"), speakermodel, SLOT(load()));
  file_menu->insertItem( _("&Save Speaker"), speakermodel, SLOT(save()));
  file_menu->insertItem( _("Save Speaker &as..."), speakermodel, SLOT(save_as()));
d113 4
d118 1
a118 2
  detect_ID = opt_menu->insertItem( _("&Detect Voice"), speakermodel, SLOT(toggle_detect_mode()));
  opt_menu->setCheckable( TRUE );
d127 1
d161 2
d164 1
d167 2
d170 1
d182 1
a182 1
  opt_menu->setItemChecked( detect_ID, do_detect );
@
