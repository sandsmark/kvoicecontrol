head	1.8;
access;
symbols
	beforeConnectedTry:1.4
	branchAndBound:1.4
	dockingToPanelNow:1.4;
locks; strict;
comment	@ * @;


1.8
date	99.01.02.08.15.10;	author kiecza;	state Exp;
branches;
next	1.7;

1.7
date	98.12.17.01.49.51;	author kiecza;	state Exp;
branches;
next	1.6;

1.6
date	98.06.14.12.55.01;	author daniel;	state Exp;
branches;
next	1.5;

1.5
date	98.06.02.10.33.42;	author daniel;	state Exp;
branches;
next	1.4;

1.4
date	98.04.29.02.09.02;	author daniel;	state Exp;
branches;
next	1.3;

1.3
date	98.04.27.19.44.52;	author daniel;	state Exp;
branches;
next	1.2;

1.2
date	98.04.27.00.22.03;	author daniel;	state Exp;
branches;
next	1.1;

1.1
date	98.04.26.15.57.31;	author daniel;	state Exp;
branches;
next	;


desc
@@


1.8
log
@removed RCS log history from file header
@
text
@/*********************************************************************************
 *
 * $Id: buffer.h,v 1.7 1998/12/17 01:49:51 kiecza Exp kiecza $
 *
 *********************************************************************************/

#ifndef BUFFER_H
#define BUFFER_H

#include <qobject.h>

#include "soundcard.h"

class QDialog;
class QLabel;

/* ---------------------------------------------------------------------- */
/*  excerpted from KRecord ...                                            */
/* ---------------------------------------------------------------------- */

class SoundBuffer : public QObject 
{
  Q_OBJECT
  
private:

  short *buffer;
  
  int  position;
  int  position_play;
  int  size;

  Soundcard    *card;
 
  int          rec_level,stop_level,wait,level_distance;
  
  bool         recording, playing;
  
  void         *prefetch;
  int          prefetch_N;
  int          prefetch_pos;

  int accept_low_N;
  int accept_low_count;
  
  bool         get_another_buffer;
  int          postfetch_N;
  int          postfetch_count;

  bool replay;

  bool do_calibrate;
  int calibrate_what; // ***** -1=init, 0=nothing, 1=start_level, 2=stop_level
  int calibrate_count;
  int cal_stop_level;
  int cal_start_level_sum;
  int cal_start_level_min;
  int cal_start_level_count;
  int cal_start_level;

  QDialog *stop_level_dlgbox;
  QLabel  *stop_level_msg;
   
  bool record();
  void stop();

public:

  SoundBuffer();
  ~SoundBuffer();

  bool play();
 
  void *read_audio(int len);
  int   write_audio(int len, void *data);
  int   prefetch_audio(int len, void *data);

  bool is_detect_mode();
  bool detect_speech(bool);
  void set_stop_level(int l);
  
  void do_replay(bool);
  short *get_data();
  int get_size();

  int get_acc_sil_frames() {return accept_low_N;};
  int get_rec_level_threshold() {return rec_level;};

signals:

  void recording_active();
  void end_detected();
  
public slots:

  void new_data(void *data);
  void post_data(void *data);

  void set_accept_silence(int val) {accept_low_N = val;};
  void set_rec_level_threshold(int val) {rec_level = val;};

  void calibrate_micro();
  void cal_stop_level_done();
};

#endif
@


1.7
log
@new method is_detect_mode() tells whether the buffer is in autorecording mode
@
text
@d3 1
a3 22
 * $Id: buffer.h,v 1.6 1998/06/14 12:55:01 daniel Exp kiecza $
 *
 * $Log: buffer.h,v $
 * Revision 1.6  1998/06/14 12:55:01  daniel
 * stop_level calibration has to be done by the user by adjusting MIC IN within kmix!
 *
 * Revision 1.5  1998/06/02 10:33:42  daniel
 * microphone calibration added
 *
 * Revision 1.4  1998/04/29 02:09:02  daniel
 * record(), play() and detect_speech() return bool now instead of void
 *
 * Revision 1.3  1998/04/27 19:44:52  daniel
 * now emitting new signal recording_active, used for LED-control
 *
 * Revision 1.2  1998/04/27 00:22:03  daniel
 * added misc get/set functions needed for the implementation of
 * the options dialog.
 *
 * Revision 1.1  1998/04/26 15:57:31  daniel
 * Initial revision
 *
@


1.6
log
@stop_level calibration has to be done by the user by adjusting MIC IN within kmix!
@
text
@d3 1
a3 1
 * $Id: buffer.h,v 1.5 1998/06/02 10:33:42 daniel Exp daniel $
d6 3
d98 2
a99 1
  
@


1.5
log
@microphone calibration added
@
text
@d3 1
a3 1
 * $Id: buffer.h,v 1.4 1998/04/29 02:09:02 daniel Exp daniel $
d6 3
d32 3
d53 1
a53 1
  int          rec_level,stop_level,wait;
d79 3
d120 1
@


1.4
log
@record(), play() and detect_speech() return bool now instead of void
@
text
@d3 1
a3 1
 * $Id: buffer.h,v 1.3 1998/04/27 19:44:52 daniel Exp daniel $
d6 3
d64 9
d109 2
@


1.3
log
@now emitting new signal recording_active, used for LED-control
@
text
@d3 1
a3 1
 * $Id: buffer.h,v 1.2 1998/04/27 00:22:03 daniel Exp daniel $
d6 3
d61 1
a61 1
  void record();
d69 1
a69 1
  void play();
d75 1
a75 1
  void detect_speech(bool);
@


1.2
log
@added misc get/set functions needed for the implementation of
the options dialog.
@
text
@d3 1
a3 1
 * $Id: buffer.h,v 1.1 1998/04/26 15:57:31 daniel Exp daniel $
d6 4
d84 1
@


1.1
log
@Initial revision
@
text
@d3 5
a7 1
 * $Id: $
a8 1
 * $Log: $
a55 1
  void play();
d61 3
a63 1
  
a68 1
  void set_rec_level(int l);
d75 3
d86 3
@
