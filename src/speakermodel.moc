/****************************************************************************
** SpeakerModel meta object code from reading C++ file 'speakermodel.h'
**
** Created: Fri Jan 29 20:14:52 1999
**      by: The Qt Meta Object Compiler ($Revision: 2.25.2.11 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#define Q_MOC_OUTPUT_REVISION 2
#elif Q_MOC_OUTPUT_REVISION != 2
#error "Moc format conflict - please regenerate all moc files"
#endif

#include "speakermodel.h"
#include <qmetaobject.h>


const char *SpeakerModel::className() const
{
    return "SpeakerModel";
}

QMetaObject *SpeakerModel::metaObj = 0;


#if QT_VERSION >= 200
static QMetaObjectInit init_SpeakerModel(&SpeakerModel::staticMetaObject);

#endif

void SpeakerModel::initMetaObject()
{
    if ( metaObj )
	return;
    if ( strcmp(QWidget::className(), "QWidget") != 0 )
	badSuperclassWarning("SpeakerModel","QWidget");

#if QT_VERSION >= 200
    staticMetaObject();
}

void SpeakerModel::staticMetaObject()
{
    if ( metaObj )
	return;
    QWidget::staticMetaObject();
#else

    QWidget::initMetaObject();
#endif

    typedef bool(SpeakerModel::*m1_t0)();
    typedef void(SpeakerModel::*m1_t1)();
    typedef void(SpeakerModel::*m1_t2)();
    typedef void(SpeakerModel::*m1_t3)();
    typedef void(SpeakerModel::*m1_t4)();
    typedef void(SpeakerModel::*m1_t5)();
    typedef void(SpeakerModel::*m1_t6)();
    typedef void(SpeakerModel::*m1_t7)();
    typedef void(SpeakerModel::*m1_t8)();
    typedef void(SpeakerModel::*m1_t9)(Reference*);
    typedef void(SpeakerModel::*m1_t10)();
    typedef void(SpeakerModel::*m1_t11)();
    typedef void(SpeakerModel::*m1_t12)();
    typedef void(SpeakerModel::*m1_t13)();
    typedef void(SpeakerModel::*m1_t14)();
    typedef void(SpeakerModel::*m1_t15)();
    m1_t0 v1_0 = &SpeakerModel::reset;
    m1_t1 v1_1 = &SpeakerModel::load;
    m1_t2 v1_2 = &SpeakerModel::import;
    m1_t3 v1_3 = &SpeakerModel::save;
    m1_t4 v1_4 = &SpeakerModel::save_as;
    m1_t5 v1_5 = &SpeakerModel::test_utterance;
    m1_t6 v1_6 = &SpeakerModel::new_reference;
    m1_t7 v1_7 = &SpeakerModel::edit_reference;
    m1_t8 v1_8 = &SpeakerModel::delete_reference;
    m1_t9 v1_9 = &SpeakerModel::append_reference;
    m1_t10 v1_10 = &SpeakerModel::detect_mode_on;
    m1_t11 v1_11 = &SpeakerModel::detect_mode_off;
    m1_t12 v1_12 = &SpeakerModel::toggle_detect_mode;
    m1_t13 v1_13 = &SpeakerModel::show_options;
    m1_t14 v1_14 = &SpeakerModel::train_references;
    m1_t15 v1_15 = &SpeakerModel::calibrate_micro;
    QMetaData *slot_tbl = new QMetaData[16];
    slot_tbl[0].name = "reset()";
    slot_tbl[1].name = "load()";
    slot_tbl[2].name = "import()";
    slot_tbl[3].name = "save()";
    slot_tbl[4].name = "save_as()";
    slot_tbl[5].name = "test_utterance()";
    slot_tbl[6].name = "new_reference()";
    slot_tbl[7].name = "edit_reference()";
    slot_tbl[8].name = "delete_reference()";
    slot_tbl[9].name = "append_reference(Reference*)";
    slot_tbl[10].name = "detect_mode_on()";
    slot_tbl[11].name = "detect_mode_off()";
    slot_tbl[12].name = "toggle_detect_mode()";
    slot_tbl[13].name = "show_options()";
    slot_tbl[14].name = "train_references()";
    slot_tbl[15].name = "calibrate_micro()";
    slot_tbl[0].ptr = *((QMember*)&v1_0);
    slot_tbl[1].ptr = *((QMember*)&v1_1);
    slot_tbl[2].ptr = *((QMember*)&v1_2);
    slot_tbl[3].ptr = *((QMember*)&v1_3);
    slot_tbl[4].ptr = *((QMember*)&v1_4);
    slot_tbl[5].ptr = *((QMember*)&v1_5);
    slot_tbl[6].ptr = *((QMember*)&v1_6);
    slot_tbl[7].ptr = *((QMember*)&v1_7);
    slot_tbl[8].ptr = *((QMember*)&v1_8);
    slot_tbl[9].ptr = *((QMember*)&v1_9);
    slot_tbl[10].ptr = *((QMember*)&v1_10);
    slot_tbl[11].ptr = *((QMember*)&v1_11);
    slot_tbl[12].ptr = *((QMember*)&v1_12);
    slot_tbl[13].ptr = *((QMember*)&v1_13);
    slot_tbl[14].ptr = *((QMember*)&v1_14);
    slot_tbl[15].ptr = *((QMember*)&v1_15);
    typedef void(SpeakerModel::*m2_t0)(QString);
    typedef void(SpeakerModel::*m2_t1)(bool);
    m2_t0 v2_0 = &SpeakerModel::new_title;
    m2_t1 v2_1 = &SpeakerModel::detect_mode_changed;
    QMetaData *signal_tbl = new QMetaData[2];
    signal_tbl[0].name = "new_title(QString)";
    signal_tbl[1].name = "detect_mode_changed(bool)";
    signal_tbl[0].ptr = *((QMember*)&v2_0);
    signal_tbl[1].ptr = *((QMember*)&v2_1);
    metaObj = new QMetaObject( "SpeakerModel", "QWidget",
	slot_tbl, 16,
	signal_tbl, 2 );
}

#include <qobjectdefs.h>
#if QT_VERSION >= 141
// newer implementation
#include <qsignalslotimp.h>
#else
// for late-model 1.x header files
#if !defined(Q_MOC_CONNECTIONLIST_DECLARED)
#define Q_MOC_CONNECTIONLIST_DECLARED
#include <qlist.h>
Q_DECLARE(QListM,QConnection);
Q_DECLARE(QListIteratorM,QConnection);
#endif
#endif

// SIGNAL new_title
void SpeakerModel::new_title( QString t0 )
{
    QConnectionList *clist = receivers("new_title(QString)");
    if ( !clist || signalsBlocked() )
	return;
    typedef void (QObject::*RT0)();
    typedef RT0 *PRT0;
    typedef void (QObject::*RT1)(QString);
    typedef RT1 *PRT1;
    RT0 r0;
    RT1 r1;
    QConnectionListIt it(*clist);
    QConnection   *c;
    QSenderObject *object;
    while ( (c=it.current()) ) {
	++it;
	object = (QSenderObject*)c->object();
	object->setSender( this );
	switch ( c->numArgs() ) {
	    case 0:
		r0 = *((PRT0)(c->member()));
		(object->*r0)();
		break;
	    case 1:
		r1 = *((PRT1)(c->member()));
		(object->*r1)(t0);
		break;
	}
    }
}

// SIGNAL detect_mode_changed
void SpeakerModel::detect_mode_changed( bool t0 )
{
    QConnectionList *clist = receivers("detect_mode_changed(bool)");
    if ( !clist || signalsBlocked() )
	return;
    typedef void (QObject::*RT0)();
    typedef RT0 *PRT0;
    typedef void (QObject::*RT1)(bool);
    typedef RT1 *PRT1;
    RT0 r0;
    RT1 r1;
    QConnectionListIt it(*clist);
    QConnection   *c;
    QSenderObject *object;
    while ( (c=it.current()) ) {
	++it;
	object = (QSenderObject*)c->object();
	object->setSender( this );
	switch ( c->numArgs() ) {
	    case 0:
		r0 = *((PRT0)(c->member()));
		(object->*r0)();
		break;
	    case 1:
		r1 = *((PRT1)(c->member()));
		(object->*r1)(t0);
		break;
	}
    }
}
